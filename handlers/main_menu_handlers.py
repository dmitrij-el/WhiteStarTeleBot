from aiogram import F, Router
from aiogram.types import Message
from aiogram.filters import Command, CommandStart
from aiogram.fsm.context import FSMContext

from states.states import StateMenu, StateAdminMenu
from keyboards import kb_main_menu, kb_admin_menu
from data import db_funcs_user_account
from data.texts import text_navigator, text_admin_navigator
from data.db_funcs_user_account import check_admin

router = Router()


@router.message(CommandStart())
async def handler_start(msg: Message, state: FSMContext):
    """
    –†–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É 'start'. –ü—Ä–∏ –≤—ã–∑–æ–≤–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —é–∑–µ—Ä–∞.
    –ï—Å–ª–∏ —é–∑–µ—Ä–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î.
    –ï—Å–ª–∏ –µ—Å—Ç—å, –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –æ–±–Ω—É–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ.


    :param msg: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param state: –°–æ—Å—Ç–æ—è–Ω–∏–µ –±–æ—Ç–∞

    """

    user_id = msg.from_user.id
    user = db_funcs_user_account.check_user_datas(user_id=user_id)
    if user:
        await msg.answer(text=text_navigator.greet_cont_replay.format(name=msg.from_user.first_name),
                         reply_markup=kb_main_menu.main_menu(user_id=user_id))
        await state.set_state(StateMenu.main_menu)

    else:
        acc_dict = {
            'user_id': msg.from_user.id,
            'name': msg.from_user.first_name,
            'surname': msg.from_user.last_name,
            'username': msg.from_user.username
        }
        db_funcs_user_account.user_rec_datas_in_reg(acc_dict=acc_dict)
        if db_funcs_user_account.check_user_datas(user_id):
            await msg.answer(text=text_navigator.greet_cont.format(name=msg.from_user.first_name),
                             reply_markup=kb_main_menu.main_menu(user_id=user_id))
            await state.set_state(StateMenu.main_menu)
        else:
            await msg.answer(text=text_navigator.err_reg_fatal)
            prompt = msg.text
            await msg.answer(text=prompt)
            await state.set_state(StateMenu.main_menu)


@router.message(Command('main_menu'))
@router.message(F.text.lower().in_({"–≤—ã–π—Ç–∏ –≤ –º–µ–Ω—é", "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", '–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'}))
async def main_menu(msg: Message, state: FSMContext):
    user_id = msg.from_user.id
    await msg.answer(text=text_navigator.main_menu, reply_markup=kb_main_menu.main_menu(user_id=user_id))
    await state.set_state(StateMenu.main_menu)


@router.message(StateMenu.main_menu)
async def main_menu(msg: Message, state: FSMContext):
    prompt = msg.text
    if prompt == "–ú–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞":
        if check_admin(msg.from_user.id):
            await msg.answer(text_admin_navigator.admin_main_menu,
                             reply_markup=kb_admin_menu.adm_main_menu(user_id=msg.from_user.id))
            await state.set_state(StateAdminMenu.admin_main_menu)
        else:
            await msg.answer(text=text_admin_navigator.err_admin_access_rights,
                             reply_markup=kb_main_menu.main_menu(user_id=user_id))
            await state.set_state(StateMenu.main_menu)


@router.message(Command('info_events'))
@router.message(F.text.lower().in_({"—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π", "–∫–∞–ª–µ–Ω–¥–∞—Ä—å", "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"}))
@router.message(F.text.in_({"üóìÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π"}))
async def info_events(msg: Message, state: FSMContext):
    await msg.answer(text='—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π! –Ω–∞–¥–æ –ø—Ä–æ—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç–≤–µ—Ç',
                     reply_markup=kb_main_menu.main_menu(user_id=msg.from_user.id))


@router.message(Command('table_reservations'))
@router.message(F.text.lower().in_({"–∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª", "—Å—Ç–æ–ª"}))
@router.message(F.text.in_({"‚è∏Ô∏è –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª"}))
async def table_reservations(msg: Message, state: FSMContext):
    await msg.answer(text='–∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª')


@router.message(Command('party_reservations'))
@router.message(F.text.lower().in_({"–∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤", "–∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤", "party", "–≤–µ—á–µ—Ä–∏–Ω–∫–∞"}))
@router.message(F.text.in_({"‚è∏Ô∏è –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤"}))
async def corporate_reservations(msg: Message, state: FSMContext):
    await msg.answer(text='company party')


@router.message(Command('info_rest'))
@router.message(F.text.lower().in_({"–æ–± whitestar", "whitestar"}))
@router.message(F.text.in_({"‚≠ê –û–± WhiteStar"}))
async def info_rest(msg: Message, state: FSMContext):
    await msg.answer(text='–û white Star',
                     reply_markup=kb_main_menu.main_menu(user_id=msg.from_user.id))
    await msg.answer_location(latitude=55.889991, longitude=37.587959)
    await msg.answer(text='https://yandex.ru/maps/-/CDTf4UnL')


@router.message(Command('menu_rest'))
@router.message(F.text.lower().in_({"–º–µ–Ω—é", "–µ–¥–∞", "—Ä–µ—Å—Ç–æ—Ä–∞–Ω–Ω–æ–µ –º–µ–Ω—é"}))
async def menu_rest(msg: Message, state: FSMContext):
    await msg.answer(text="https://wslounge.ru/menu",
                     reply_markup=kb_main_menu.main_menu(user_id=msg.from_user.id))


@router.message(Command('profile'))
@router.message(F.text.lower().in_({"–ø—Ä–æ—Ñ–∏–ª—å"}),
                F.text.in_({"üë§ –ü—Ä–æ—Ñ–∏–ª—å"}))
async def user_profile(msg: Message, state: FSMContext):
    await msg.answer(text='–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ',
                     reply_markup=kb_main_menu.main_menu(user_id=msg.from_user.id))


@router.message(Command('help'))
@router.message(F.text.lower().in_({"–ø–æ–º–æ—â—å", "help"}))
async def send_help(msg: Message, state: FSMContext):
    await msg.answer(text="–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")
    await msg.answer(text="""
/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞.
/main_menu - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
/info_events - –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
/table_reservations - –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª
/party_reservations - –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤
/menu_rest - –ú–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
/info_rest - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ.
/profile - –î–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
/help - –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
""",
                     reply_markup=kb_main_menu.main_menu(user_id=msg.from_user.id))
    await state.set_state(StateMenu.main_menu)
